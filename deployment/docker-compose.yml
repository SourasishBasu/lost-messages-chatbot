---
services:

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:443"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=swapsnil12@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      - --accesslog=true
      - --accesslog.filepath=/traefik/logs/access.log
      - --accesslog.bufferingsize=100

      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --entryPoints.metrics.address=:8899
      - --metrics.prometheus.entryPoint=metrics
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/logs:/traefik/logs
      - "./letsencrypt:/letsencrypt"
    depends_on:
      api:
        condition: service_started

  # Chatbot Backend Container
  api:
    image: sasquatch06/chatbot-backend:latest
    restart: unless-stopped
    deploy:
      replicas: 2
    ports:
      - "8000"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`lm-chatbot-backend.rycerz.es`)" # Update for domain routing
      - "traefik.http.services.api.loadbalancer.server.port=8000" # API container's internal port
      - "traefik.http.routers.api.tls.certresolver=myresolver"

  ## Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8090:8080"
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped

  ## System Usage Metrics
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem'
      - '--collector.cpu'
      - '--collector.systemd'
      - '--collector.processes'
      - '--collector.meminfo'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  # Metrics Collector
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  # Dashboard
  grafana:
    image: grafana/grafana-oss:11.4.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "7500:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=johnlost
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    depends_on:
      - traefik
      - prometheus

volumes:
  grafana-data:
  prometheus-data:
